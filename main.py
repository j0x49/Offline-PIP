# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file '.\MainWindow.ui'
#
# Created by: PyQt5 UI code generator 5.15.7
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


import os, glob, threading, shutil, ctypes
from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtWidgets import QMessageBox

myappid = 'mycompany.myproduct.subproduct.version'
ctypes.windll.shell32.SetCurrentProcessExplicitAppUserModelID(myappid)
rootStyleSheet = ("\n"
"*{\n"
"  color: #ffffff;\n"
"\n"
"  font-family: monoespace;\n"
"\n"
"  \n"
"    font-size: 13.0px;\n"
"  \n"
"\n"
"  \n"
"    line-height: 13.0px;\n"
"  \n"
"\n"
"  selection-background-color: #6effe8;\n"
"  selection-color: #000000;\n"
"}\n"
"\n"
"*:focus {\n"
"   outline: none;\n"
"}\n"
"\n"
"/*  ------------------------------------------------------------------------  */\n"
"/*  Custom colors  */\n"
"\n"
".danger{\n"
"  color: #dc3545;\n"
"  background-color: transparent;\n"
"}\n"
"\n"
".warning{\n"
"  color: #ffc107;\n"
"  background-color: transparent;\n"
"}\n"
"\n"
".success{\n"
"  color: #17a2b8;\n"
"  background-color: transparent;\n"
"}\n"
"\n"
".danger:disabled{\n"
"  color: rgba(220, 53, 69, 0.4);\n"
"  border-color: rgba(220, 53, 69, 0.4);\n"
"}\n"
"\n"
".warning:disabled{\n"
"  color: rgba(255, 193, 7, 0.4);\n"
"  border-color: rgba(255, 193, 7, 0.4);\n"
"}\n"
"\n"
".success:disabled{\n"
"  color: rgba(23, 162, 184, 0.4);\n"
"  border-color: rgba(23, 162, 184, 0.4);\n"
"}\n"
"\n"
".danger:flat:disabled{\n"
"  background-color: rgba(220, 53, 69, 0.1);\n"
"}\n"
"\n"
".warning:flat:disabled{\n"
"  background-color: rgba(255, 193, 7, 0.1);\n"
"}\n"
"\n"
".success:flat:disabled{\n"
"  background-color: rgba(23, 162, 184, 0.1);\n"
"}\n"
"\n"
"/*  ------------------------------------------------------------------------  */\n"
"/*  Basic widgets  */\n"
"\n"
"QWidget {\n"
"  background-color: #31363b;\n"
"}\n"
"\n"
"QGroupBox,\n"
"QFrame {\n"
"  background-color: #31363b;\n"
"  border: 2px solid #4f5b62;\n"
"  border-radius: 4px;\n"
"}\n"
"\n"
"QGroupBox.fill_background,\n"
"QFrame.fill_background {\n"
"  background-color: #232629;\n"
"  border: 2px solid #232629;\n"
"  border-radius: 4px;\n"
"}\n"
"\n"
"QSplitter {\n"
"  background-color: transparent;\n"
"  border: none\n"
"}\n"
"\n"
"QStatusBar {\n"
"  color: #ffffff;\n"
"  background-color: rgba(79, 91, 98, 0.2);\n"
"  border-radius: 0px;\n"
"}\n"
"\n"
"QScrollArea,\n"
"QStackedWidget,\n"
"QWidget > QToolBox,\n"
"QToolBox > QWidget,\n"
"QTabWidget > QWidget {\n"
"  border: none;\n"
"}\n"
"\n"
"QTabWidget::pane {\n"
"  border: none;\n"
"}\n"
"\n"
"/*  ------------------------------------------------------------------------  */\n"
"/*  Inputs  */\n"
"\n"
"QDateTimeEdit,\n"
"QSpinBox,\n"
"QDoubleSpinBox,\n"
"QTextEdit,\n"
"QLineEdit,\n"
"QPushButton {\n"
"  color: #1de9b6;\n"
"  background-color: #31363b;\n"
"  border: 2px solid #1de9b6;\n"
"  border-radius: 4px;\n"
"  height: 32px;\n"
"}\n"
"\n"
"QDateTimeEdit,\n"
"QSpinBox,\n"
"QDoubleSpinBox,\n"
"QTreeView,\n"
"QListView,\n"
"QLineEdit,\n"
"QComboBox {\n"
"  padding-left: 16px;\n"
"  border-radius: 0px;\n"
"  background-color: #232629;\n"
"  border-width: 0 0 2px 0;\n"
"  border-radius: 0px;\n"
"  border-top-left-radius: 4px;\n"
"  border-top-right-radius: 4px;\n"
"  height: 32px;\n"
"}\n"
"\n"
"QPlainTextEdit {\n"
"  border-radius: 4px;\n"
"  padding: 8px 16px;\n"
"  background-color: #31363b;\n"
"  border: 2px solid #4f5b62;\n"
"}\n"
"\n"
"QTextEdit {\n"
"  padding: 8px 16px;\n"
"  border-radius: 4px;\n"
"  background-color: #232629;\n"
"}\n"
"\n"
"QDateTimeEdit:disabled,\n"
"QSpinBox:disabled,\n"
"QDoubleSpinBox:disabled,\n"
"QTextEdit:disabled,\n"
"QLineEdit:disabled {\n"
"  color: rgba(29, 233, 182, 0.2);\n"
"  background-color: rgba(35, 38, 41, 0.75);\n"
"  border: 2px solid rgba(29, 233, 182, 0.2);\n"
"  border-width: 0 0 2px 0;\n"
"  padding: 0px 16px;\n"
"  border-radius: 0px;\n"
"  border-top-left-radius: 4px;\n"
"  border-top-right-radius: 4px;\n"
"  height: 32px;\n"
"}\n"
"\n"
"/*  ------------------------------------------------------------------------  */\n"
"/*  QComboBox  */\n"
"\n"
"QComboBox {\n"
"  color: #1de9b6;\n"
"  border: 1px solid #1de9b6;\n"
"  border-width: 0 0 2px 0;\n"
"  background-color: #232629;\n"
"  border-radius: 0px;\n"
"  border-top-left-radius: 4px;\n"
"  border-top-right-radius: 4px;\n"
"  height: 32px;\n"
"}\n"
"\n"
"QComboBox:disabled {\n"
"  color: rgba(29, 233, 182, 0.2);\n"
"  background-color: rgba(35, 38, 41, 0.75);\n"
"  border-bottom: 2px solid rgba(29, 233, 182, 0.2);\n"
"}\n"
"\n"
"QComboBox::drop-down {\n"
"  border: none;\n"
"  color: #1de9b6;\n"
"  width: 20px;\n"
"}\n"
"\n"
"QComboBox::down-arrow {\n"
"  image: url(./theme/primary/downarrow.svg);\n"
"  margin-right: 12px;\n"
"}\n"
"\n"
"QComboBox::down-arrow:disabled {\n"
"  image: url(./theme/disabled/downarrow.svg);\n"
"  margin-right: 12px;\n"
"}\n"
"\n"
"QComboBox QAbstractItemView {\n"
"  background-color: #232629;\n"
"  border: 2px solid #4f5b62;\n"
"  border-radius: 4px;\n"
"}\n"
"\n"
"QComboBox[frame=\'false\'] {\n"
"  color: #1de9b6;\n"
"  background-color: transparent;\n"
"  border: 1px solid transparent;\n"
"}\n"
"QComboBox[frame=\'false\']:disabled {\n"
"  color: rgba(29, 233, 182, 0.2);\n"
"}\n"
"\n"
"/*  ------------------------------------------------------------------------  */\n"
"/*  Spin buttons  */\n"
"\n"
"QDateTimeEdit::up-button,\n"
"QDoubleSpinBox::up-button,\n"
"QSpinBox::up-button {\n"
"  subcontrol-origin: border;\n"
"  subcontrol-position: top right;\n"
"  width: 20px;\n"
"  image: url(./theme/primary/uparrow.svg);\n"
"  border-width: 0px;\n"
"  margin-right: 5px;\n"
"}\n"
"\n"
"QDateTimeEdit::up-button:disabled,\n"
"QDoubleSpinBox::up-button:disabled,\n"
"QSpinBox::up-button:disabled {\n"
"  image: url(./theme/disabled/uparrow.svg);\n"
"}\n"
"\n"
"QDateTimeEdit::down-button,\n"
"QDoubleSpinBox::down-button,\n"
"QSpinBox::down-button {\n"
"  subcontrol-origin: border;\n"
"  subcontrol-position: bottom right;\n"
"  width: 20px;\n"
"  image: url(./theme/primary/downarrow.svg);\n"
"  border-width: 0px;\n"
"  border-top-width: 0;\n"
"  margin-right: 5px;\n"
"}\n"
"\n"
"QDateTimeEdit::down-button:disabled,\n"
"QDoubleSpinBox::down-button:disabled,\n"
"QSpinBox::down-button:disabled {\n"
"  image: url(./theme/disabled/downarrow.svg);\n"
"}\n"
"\n"
"/*  ------------------------------------------------------------------------  */\n"
"/*  QPushButton  */\n"
"\n"
"QPushButton {\n"
"  text-transform: uppercase;\n"
"  margin: 0px;\n"
"  padding: 1px 16px;\n"
"  height: 32px;\n"
"  font-weight: bold;\n"
"\n"
"  \n"
"    border-radius: 4px;\n"
"  \n"
"\n"
"\n"
"}\n"
"\n"
"QPushButton:checked,\n"
"QPushButton:pressed {\n"
"  color: #31363b;\n"
"  background-color: #1de9b6;\n"
"}\n"
"\n"
"QPushButton:flat {\n"
"  margin: 0px;\n"
"  color: #1de9b6;\n"
"  border: none;\n"
"  background-color: transparent;\n"
"}\n"
"\n"
"QPushButton:flat:hover {\n"
"  background-color: rgba(29, 233, 182, 0.2);\n"
"}\n"
"\n"
"QPushButton:flat:pressed,\n"
"QPushButton:flat:checked {\n"
"  background-color: rgba(29, 233, 182, 0.1);\n"
"}\n"
"\n"
"QPushButton:disabled {\n"
"  color: rgba(79, 91, 98, 0.75);\n"
"  background-color: transparent;\n"
"  border-color:  #4f5b62;\n"
"}\n"
"\n"
"QPushButton:flat:disabled {\n"
"  color: rgba(79, 91, 98, 0.75);\n"
"  background-color: rgba(79, 91, 98, 0.25);\n"
"  border: none;\n"
"}\n"
"\n"
"QPushButton:disabled {\n"
"  border: 2px solid rgba(79, 91, 98, 0.75);\n"
"}\n"
"\n"
"QPushButton:checked:disabled {\n"
"  color: #232629;\n"
"  background-color: #4f5b62;\n"
"  border-color:  #4f5b62;\n"
"}\n"
"\n"
"/*  ------------------------------------------------------------------------  */\n"
"/*  QTabBar  */\n"
"\n"
"QTabBar{\n"
"  text-transform: uppercase;\n"
"  font-weight: bold;\n"
"}\n"
"\n"
"QTabBar::tab {\n"
"  color: #ffffff;\n"
"  border: 0px;\n"
"}\n"
"\n"
"QTabBar::tab:bottom,\n"
"QTabBar::tab:top{\n"
"  padding: 0 16px;\n"
"  height: 28px;\n"
"}\n"
"\n"
"QTabBar::tab:left,\n"
"QTabBar::tab:right{\n"
"  padding: 16px 0;\n"
"  width: 28px;\n"
"}\n"
"\n"
"QTabBar::tab:top:selected,\n"
"QTabBar::tab:top:hover {\n"
"  color: #1de9b6;\n"
"  border-bottom: 2px solid #1de9b6;\n"
"}\n"
"\n"
"QTabBar::tab:bottom:selected,\n"
"QTabBar::tab:bottom:hover {\n"
"  color: #1de9b6;\n"
"  border-top: 2px solid #1de9b6;\n"
"}\n"
"\n"
"QTabBar::tab:right:selected,\n"
"QTabBar::tab:right:hover {\n"
"  color: #1de9b6;\n"
"  border-left: 2px solid #1de9b6;\n"
"}\n"
"\n"
"QTabBar::tab:left:selected,\n"
"QTabBar::tab:left:hover {\n"
"  color: #1de9b6;\n"
"  border-right: 2px solid #1de9b6;\n"
"}\n"
"\n"
"QTabBar QToolButton:hover,\n"
"QTabBar QToolButton {\n"
"  border: 20px;\n"
"  background-color: #31363b;\n"
"}\n"
"\n"
"QTabBar QToolButton::up-arrow {\n"
"  image: url(./theme/disabled/uparrow2.svg);\n"
"}\n"
"\n"
"QTabBar QToolButton::up-arrow:hover {\n"
"  image: url(./theme/primary/uparrow2.svg);\n"
"}\n"
"\n"
"QTabBar QToolButton::down-arrow {\n"
"  image: url(./theme/disabled/downarrow2.svg);\n"
"}\n"
"\n"
"QTabBar QToolButton::down-arrow:hover {\n"
"  image: url(./theme/primary/downarrow2.svg);\n"
"}\n"
"\n"
"QTabBar QToolButton::right-arrow {\n"
"  image: url(./theme/primary/rightarrow2.svg);\n"
"}\n"
"\n"
"QTabBar QToolButton::right-arrow:hover {\n"
"  image: url(./theme/disabled/rightarrow2.svg);\n"
"}\n"
"\n"
"QTabBar QToolButton::left-arrow {\n"
"  image: url(./theme/primary/leftarrow2.svg);\n"
"}\n"
"\n"
"QTabBar QToolButton::left-arrow:hover {\n"
"  image: url(./theme/disabled/leftarrow2.svg);\n"
"}\n"
"\n"
"QTabBar::close-button {\n"
"  image: url(./theme/disabled/tab_close.svg);\n"
"}\n"
"\n"
"QTabBar::close-button:hover {\n"
"  image: url(./theme/primary/tab_close.svg);\n"
"}\n"
"\n"
"/*  ------------------------------------------------------------------------  */\n"
"/*  QGroupBox  */\n"
"\n"
"QGroupBox {\n"
"  padding: 16px;\n"
"  padding-top: 36px;\n"
"  line-height: 13px;\n"
"  text-transform: uppercase;\n"
"  font-size: 13px;\n"
"}\n"
"\n"
"QGroupBox::title {\n"
"  color: rgba(255, 255, 255, 0.4);\n"
"  subcontrol-origin: margin;\n"
"  subcontrol-position: top left;\n"
"  padding: 16px;\n"
"  background-color: #31363b;\n"
"  background-color: transparent;\n"
"  height: 36px;\n"
"}\n"
"\n"
"/*  ------------------------------------------------------------------------  */\n"
"/*  QRadioButton and QCheckBox labels  */\n"
"\n"
"QRadioButton,\n"
"QCheckBox {\n"
"  spacing: 12px;\n"
"  color: #ffffff;\n"
"  line-height: 14px;\n"
"  height: 36px;\n"
"  background-color: transparent;\n"
"  spacing: 5px;\n"
"}\n"
"\n"
"QRadioButton:disabled,\n"
"QCheckBox:disabled {\n"
"  color: rgba(255, 255, 255, 0.3);\n"
"}\n"
"\n"
"/*  ------------------------------------------------------------------------  */\n"
"/*  General Indicators  */\n"
"\n"
"QGroupBox::indicator {\n"
"  width: 24px;\n"
"  height: 24px;\n"
"  border-radius: 3px;\n"
"}\n"
"\n"
"QMenu::indicator,\n"
"QListView::indicator,\n"
"QTableWidget::indicator,\n"
"QRadioButton::indicator,\n"
"QCheckBox::indicator {\n"
"  width: 28px;\n"
"    \n"
"  border-radius: 4px;\n"
" }\n"
"\n"
"/*  ------------------------------------------------------------------------  */\n"
"/*  QListView Indicator  */\n"
"\n"
"QListView::indicator:checked,\n"
"QListView::indicator:checked:selected,\n"
"QListView::indicator:checked:focus {\n"
"  image: url(./theme/primary/checklist.svg);\n"
"}\n"
"\n"
"QListView::indicator:checked:selected:active {\n"
"  image: url(./theme/primary/checklist_invert.svg);\n"
"}\n"
"\n"
"QListView::indicator:checked:disabled {\n"
"  image: url(./theme/disabled/checklist.svg);\n"
"}\n"
"\n"
"QListView::indicator:indeterminate,\n"
"QListView::indicator:indeterminate:selected,\n"
"QListView::indicator:indeterminate:focus {\n"
"  image: url(./theme/primary/checklist_indeterminate.svg);\n"
"}\n"
"\n"
"QListView::indicator:indeterminate:selected:active {\n"
"  image: url(./theme/primary/checklist_indeterminate_invert.svg);\n"
"}\n"
"\n"
"QListView::indicator:indeterminate:disabled {\n"
"  image: url(./theme/disabled/checklist_indeterminate.svg);\n"
"}\n"
"\n"
"/*  ------------------------------------------------------------------------  */\n"
"/*  QTableView Indicator  */\n"
"\n"
"QTableView::indicator:enabled:checked,\n"
"QTableView::indicator:enabled:checked:selected,\n"
"QTableView::indicator:enabled:checked:focus {\n"
"  image: url(./theme/primary/checkbox_checked.svg);\n"
"}\n"
"\n"
"QTableView::indicator:checked:selected:active {\n"
"  image: url(./theme/primary/checkbox_checked_invert.svg);\n"
"}\n"
"\n"
"QTableView::indicator:disabled:checked,\n"
"QTableView::indicator:disabled:checked:selected,\n"
"QTableView::indicator:disabled:checked:focus {\n"
"  image: url(./theme/disabled/checkbox_checked.svg);\n"
"}\n"
"\n"
"QTableView::indicator:enabled:unchecked,\n"
"QTableView::indicator:enabled:unchecked:selected,\n"
"QTableView::indicator:enabled:unchecked:focus {\n"
"  image: url(./theme/primary/checkbox_unchecked.svg);\n"
"}\n"
"\n"
"QTableView::indicator:unchecked:selected:active {\n"
"  image: url(./theme/primary/checkbox_unchecked_invert.svg);\n"
"}\n"
"\n"
"QTableView::indicator:disabled:unchecked,\n"
"QTableView::indicator:disabled:unchecked:selected,\n"
"QTableView::indicator:disabled:unchecked:focus {\n"
"  image: url(./theme/disabled/checkbox_unchecked.svg);\n"
"}\n"
"\n"
"QTableView::indicator:enabled:indeterminate,\n"
"QTableView::indicator:enabled:indeterminate:selected,\n"
"QTableView::indicator:enabled:indeterminate:focus {\n"
"  image: url(./theme/primary/checkbox_indeterminate.svg);\n"
"}\n"
"\n"
"QTableView::indicator:indeterminate:selected:active {\n"
"  image: url(./theme/primary/checkbox_indeterminate_invert.svg);\n"
"}\n"
"\n"
"QTableView::indicator:disabled:indeterminate,\n"
"QTableView::indicator:disabled:indeterminate:selected,\n"
"QTableView::indicator:disabled:indeterminate:focus {\n"
"  image: url(./theme/disabled/checkbox_indeterminate.svg);\n"
"}\n"
"\n"
"/*  ------------------------------------------------------------------------  */\n"
"/*  QCheckBox and QGroupBox Indicator  */\n"
"\n"
"QCheckBox::indicator:checked,\n"
"QGroupBox::indicator:checked {\n"
"  image: url(./theme/primary/checkbox_checked.svg);\n"
"}\n"
"\n"
"QCheckBox::indicator:unchecked,\n"
"QGroupBox::indicator:unchecked {\n"
"  image: url(./theme/primary/checkbox_unchecked.svg);\n"
"}\n"
"\n"
"QCheckBox::indicator:indeterminate,\n"
"QGroupBox::indicator:indeterminate {\n"
"  image: url(./theme/primary/checkbox_indeterminate.svg);\n"
"}\n"
"\n"
"QCheckBox::indicator:checked:disabled,\n"
"QGroupBox::indicator:checked:disabled {\n"
"  image: url(./theme/disabled/checkbox_checked.svg);\n"
"}\n"
"\n"
"QCheckBox::indicator:unchecked:disabled,\n"
"QGroupBox::indicator:unchecked:disabled {\n"
"  image: url(./theme/disabled/checkbox_unchecked.svg);\n"
"}\n"
"\n"
"QCheckBox::indicator:indeterminate:disabled,\n"
"QGroupBox::indicator:indeterminate:disabled {\n"
"  image: url(./theme/disabled/checkbox_indeterminate.svg);\n"
"}\n"
"\n"
"/*  ------------------------------------------------------------------------  */\n"
"/*  QRadioButton Indicator  */\n"
"\n"
"QRadioButton::indicator:checked {\n"
"  image: url(./theme/primary/radiobutton_checked.svg);\n"
"}\n"
"\n"
"QRadioButton::indicator:unchecked {\n"
"  image: url(./theme/primary/radiobutton_unchecked.svg);\n"
"}\n"
"\n"
"QRadioButton::indicator:checked:disabled {\n"
"  image: url(./theme/disabled/radiobutton_checked.svg);\n"
"}\n"
"\n"
"QRadioButton::indicator:unchecked:disabled {\n"
"  image: url(./theme/disabled/radiobutton_unchecked.svg);\n"
"}\n"
"\n"
"/*  ------------------------------------------------------------------------  */\n"
"/*  QDockWidget  */\n"
"\n"
"QDockWidget {\n"
"  color: #ffffff;\n"
"  text-transform: uppercase;\n"
"  border: 2px solid #232629;\n"
"  titlebar-close-icon: url(./theme/primary/close.svg);\n"
"  titlebar-normal-icon: url(./theme/primary/float.svg);\n"
"  border-radius: 4px;\n"
"}\n"
"\n"
"QDockWidget::title {\n"
"  text-align: left;\n"
"  padding-left: 36px;\n"
"  padding: 3px;\n"
"  margin-top: 4px;\n"
"}\n"
"\n"
"/*  ------------------------------------------------------------------------  */\n"
"/*  QComboBox indicator  */\n"
"\n"
"QComboBox::indicator:checked {\n"
"  image: url(./theme/primary/checklist.svg);\n"
"}\n"
"\n"
"QComboBox::indicator:checked:selected {\n"
"  image: url(./theme/primary/checklist_invert.svg);\n"
"}\n"
"\n"
"/*  ------------------------------------------------------------------------  */\n"
"/*  Menu Items  */\n"
"\n"
"QComboBox::item,\n"
"QCalendarWidget QMenu::item,\n"
"QMenu::item {\n"
"  \n"
"    height: 28px;\n"
"  \n"
"  border: 8px solid transparent;\n"
"  color: #ffffff;\n"
"}\n"
"\n"
"QCalendarWidget QMenu::item,\n"
"QMenu::item {\n"
"  \n"
"    \n"
"      padding: 0px 24px 0px 8px;  /* pyside6 or pyqt6 */\n"
"    \n"
"  \n"
"}\n"
"\n"
"\n"
"QComboBox::item:selected,\n"
"QCalendarWidget QMenu::item:selected,\n"
"QMenu::item:selected {\n"
"  color: #000000;\n"
"  background-color: #6effe8;\n"
"  border-radius: 0px;\n"
"}\n"
"\n"
"QComboBox::item:disabled,\n"
"QCalendarWidget QMenu::item:disabled,\n"
"QMenu::item:disabled {\n"
"  color: rgba(255, 255, 255, 0.3);\n"
"}\n"
"\n"
"/*  ------------------------------------------------------------------------  */\n"
"/*  QMenu  */\n"
"\n"
"QCalendarWidget QMenu,\n"
"QMenu {\n"
"  background-color: #232629;\n"
"  border: 2px solid #4f5b62;\n"
"  border-radius: 4px;\n"
"}\n"
"\n"
"QMenu::separator {\n"
"  height: 2px;\n"
"  background-color: #4f5b62;\n"
"  margin-left: 2px;\n"
"  margin-right: 2px;\n"
"}\n"
"\n"
"QMenu::right-arrow{\n"
"  image: url(./theme/primary/rightarrow.svg);\n"
"  width: 16px;\n"
"  height: 16px;\n"
"}\n"
"\n"
"QMenu::right-arrow:selected{\n"
"  image: url(./theme/disabled/rightarrow.svg);\n"
"}\n"
"\n"
"QMenu::indicator:non-exclusive:unchecked {\n"
"  image: url(./theme/primary/checkbox_unchecked.svg);\n"
"}\n"
"\n"
"QMenu::indicator:non-exclusive:unchecked:selected {\n"
"  image: url(./theme/primary/checkbox_unchecked_invert.svg);\n"
"}\n"
"\n"
"QMenu::indicator:non-exclusive:checked {\n"
"  image: url(./theme/primary/checkbox_checked.svg);\n"
"}\n"
"\n"
"QMenu::indicator:non-exclusive:checked:selected {\n"
"  image: url(./theme/primary/checkbox_checked_invert.svg);\n"
"}\n"
"\n"
"QMenu::indicator:exclusive:unchecked {\n"
"  image: url(./theme/primary/radiobutton_unchecked.svg);\n"
"}\n"
"\n"
"QMenu::indicator:exclusive:unchecked:selected {\n"
"  image: url(./theme/primary/radiobutton_unchecked_invert.svg);\n"
"}\n"
"\n"
"QMenu::indicator:exclusive:checked {\n"
"  image: url(./theme/primary/radiobutton_checked.svg);\n"
"}\n"
"\n"
"QMenu::indicator:exclusive:checked:selected {\n"
"  image: url(./theme/primary/radiobutton_checked_invert.svg);\n"
"}\n"
"\n"
"/*  ------------------------------------------------------------------------  */\n"
"/*  QMenuBar  */\n"
"\n"
"QMenuBar {\n"
"  background-color: #232629;\n"
"  color: #ffffff;\n"
"}\n"
"\n"
"QMenuBar::item {\n"
"  height: 32px;\n"
"  padding: 8px;\n"
"  background-color: transparent;\n"
"  color: #ffffff;\n"
"}\n"
"\n"
"QMenuBar::item:selected,\n"
"QMenuBar::item:pressed {\n"
"  color: #000000;\n"
"  background-color: #6effe8;\n"
"}\n"
"\n"
"/*  ------------------------------------------------------------------------  */\n"
"/*  QToolBox  */\n"
"\n"
"QToolBox::tab {\n"
"  background-color: #232629;\n"
"  color: #ffffff;\n"
"  text-transform: uppercase;\n"
"  border-radius: 4px;\n"
"  padding-left: 15px;\n"
"}\n"
"\n"
"QToolBox::tab:selected,\n"
"QToolBox::tab:hover {\n"
"  background-color: rgba(29, 233, 182, 0.2);\n"
"}\n"
"\n"
"/*  ------------------------------------------------------------------------  */\n"
"/*  QProgressBar  */\n"
"\n"
"QProgressBar {\n"
"  border-radius: 0;\n"
"  background-color: #4f5b62;\n"
"  text-align: center;\n"
"  color: transparent;\n"
"}\n"
"\n"
"QProgressBar::chunk {\n"
"  background-color: #1de9b6;\n"
"}\n"
"\n"
"/*  ------------------------------------------------------------------------  */\n"
"/*  QScrollBar  */\n"
"\n"
"QScrollBar:horizontal {\n"
"  border: 0;\n"
"  background: #232629;\n"
"  height: 8px;\n"
"}\n"
"\n"
"QScrollBar:vertical {\n"
"  border: 0;\n"
"  background: #232629;\n"
"  width: 8px;\n"
"}\n"
"\n"
"QScrollBar::handle {\n"
"  background: rgba(29, 233, 182, 0.1);\n"
"}\n"
"\n"
"QScrollBar::handle:horizontal {\n"
"  min-width: 24px;\n"
"}\n"
"\n"
"QScrollBar::handle:vertical {\n"
"  min-height: 24px;\n"
"}\n"
"\n"
"QScrollBar::handle:vertical:hover,\n"
"QScrollBar::handle:horizontal:hover {\n"
"  background: #1de9b6;\n"
"}\n"
"\n"
"QScrollBar::add-line:vertical,\n"
"QScrollBar::sub-line:vertical,\n"
"QScrollBar::add-line:horizontal,\n"
"QScrollBar::sub-line:horizontal {\n"
"  border: 0;\n"
"  background: transparent;\n"
"  width: 0px;\n"
"  height: 0px;\n"
"}\n"
"\n"
"/*  ------------------------------------------------------------------------  */\n"
"/*  QScrollBar-Big  */\n"
"\n"
"QScrollBar.big:horizontal {\n"
"  border: 0;\n"
"  background: #232629;\n"
"  height: 36px;\n"
"}\n"
"\n"
"QScrollBar.big:vertical {\n"
"  border: 0;\n"
"  background: #232629;\n"
"  width: 36px;\n"
"}\n"
"\n"
"QScrollBar.big::handle,\n"
"QScrollBar.big::handle:vertical:hover,\n"
"QScrollBar.big::handle:horizontal:hover {\n"
"  background: #1de9b6;\n"
"}\n"
"\n"
"QScrollBar.big::handle:horizontal {\n"
"  min-width: 24px;\n"
"}\n"
"\n"
"QScrollBar.big::handle:vertical {\n"
"  min-height: 24px;\n"
"}\n"
"\n"
"QScrollBar.big::add-line:vertical,\n"
"QScrollBar.big::sub-line:vertical,\n"
"QScrollBar.big::add-line:horizontal,\n"
"QScrollBar.big::sub-line:horizontal {\n"
"  border: 0;\n"
"  background: transparent;\n"
"  width: 0px;\n"
"  height: 0px;\n"
"}\n"
"\n"
"/*  ------------------------------------------------------------------------  */\n"
"/*  QSlider  */\n"
"\n"
"QSlider:horizontal {\n"
"  min-height: 24px;\n"
"  max-height: 24px;\n"
"}\n"
"\n"
"QSlider:vertical {\n"
"  min-width: 24px;\n"
"  max-width: 24px;\n"
"}\n"
"\n"
"QSlider::groove:horizontal {\n"
"  height: 4px;\n"
"  background: #393939;\n"
"  margin: 0 12px;\n"
"}\n"
"\n"
"QSlider::groove:vertical {\n"
"  width: 4px;\n"
"  background: #393939;\n"
"  margin: 12px 0;\n"
"  border-radius: 24px;\n"
"}\n"
"\n"
"QSlider::handle:horizontal {\n"
"  image: url(./theme/primary/slider.svg);\n"
"  width: 24px;\n"
"  height: 24px;\n"
"  margin: -24px -12px;\n"
"}\n"
"\n"
"QSlider::handle:vertical {\n"
"  image: url(./theme/primary/slider.svg);\n"
"  border-radius: 24px;\n"
"  width: 24px;\n"
"  height: 24px;\n"
"  margin: -12px -24px;\n"
"}\n"
"\n"
"QSlider::add-page {\n"
"background: #232629;\n"
"}\n"
"\n"
"QSlider::sub-page {\n"
"background: #1de9b6;\n"
"}\n"
"\n"
"/*  ------------------------------------------------------------------------  */\n"
"/*  QLabel  */\n"
"\n"
"QLabel {\n"
"  border: none;\n"
"  background: transparent;\n"
"  color: #ffffff\n"
"}\n"
"\n"
"QLabel:disabled {\n"
"  color: rgba(255, 255, 255, 0.2)\n"
"}\n"
"\n"
"/*  ------------------------------------------------------------------------  */\n"
"/*  VLines and HLinex  */\n"
"\n"
"QFrame[frameShape=\"4\"] {\n"
"    border-width: 1px 0 0 0;\n"
"    background: none;\n"
"}\n"
"\n"
"QFrame[frameShape=\"5\"] {\n"
"    border-width: 0 1px 0 0;\n"
"    background: none;\n"
"}\n"
"\n"
"QFrame[frameShape=\"4\"],\n"
"QFrame[frameShape=\"5\"] {\n"
"  border-color: #4f5b62;\n"
"}\n"
"\n"
"/*  ------------------------------------------------------------------------  */\n"
"/*  QToolBar  */\n"
"\n"
"QToolBar {\n"
"  background: #31363b;\n"
"  border: 0px solid;\n"
"}\n"
"\n"
"QToolBar:horizontal {\n"
"  border-bottom: 1px solid #4f5b62;\n"
"}\n"
"\n"
"QToolBar:vertical {\n"
"  border-right: 1px solid #4f5b62;\n"
"}\n"
"\n"
"QToolBar::handle:horizontal {\n"
"  image: url(./theme/primary/toolbar-handle-horizontal.svg);\n"
"}\n"
"\n"
"QToolBar::handle:vertical {\n"
"  image: url(./theme/primary/toolbar-handle-vertical.svg);\n"
"}\n"
"\n"
"QToolBar::separator:horizontal {\n"
"  border-right: 1px solid #4f5b62;\n"
"  border-left: 1px solid #4f5b62;\n"
"  width: 1px;\n"
"}\n"
"\n"
"QToolBar::separator:vertical {\n"
"  border-top: 1px solid #4f5b62;\n"
"  border-bottom: 1px solid #4f5b62;\n"
"  height: 1px;\n"
"}\n"
"\n"
"\n"
"/*  ------------------------------------------------------------------------  */\n"
"/*  QToolButton  */\n"
"\n"
"QToolButton {\n"
"  background: #31363b;\n"
"  border: 0px;\n"
"  height: 36px;\n"
"  margin: 3px;\n"
"  padding: 3px;\n"
"  border-right: 12px solid #31363b;\n"
"  border-left: 12px solid #31363b;\n"
"}\n"
"\n"
"QToolButton:hover {\n"
"  background: #4f5b62;\n"
"  border-right: 12px solid #4f5b62;\n"
"  border-left: 12px solid #4f5b62;\n"
"}\n"
"\n"
"QToolButton:pressed {\n"
"  background: #232629;\n"
"  border-right: 12px solid #232629;\n"
"  border-left: 12px solid #232629;\n"
"}\n"
"\n"
"QToolButton:checked {\n"
"  background: #4f5b62;\n"
"  border-left: 12px solid #4f5b62;\n"
"  border-right: 12px solid #1de9b6;\n"
"}\n"
"\n"
"/*  ------------------------------------------------------------------------  */\n"
"/*  General viewers  */\n"
"\n"
"QTableView {\n"
"  background-color: #31363b;\n"
"  border: 1px solid #232629;\n"
"  border-radius: 4px;\n"
"}\n"
"\n"
"QTreeView,\n"
"QListView {\n"
"  border-radius: 4px;\n"
"  padding: 4px;\n"
"  margin: 0px;\n"
"  border: 0px;\n"
"}\n"
"\n"
"QTableView::item,\n"
"QTreeView::item,\n"
"QListView::item {\n"
"  padding: 4px;\n"
"  min-height: 32px;\n"
"  color: #ffffff;\n"
"  selection-color: #ffffff; /* For Windows */\n"
"  border-color: transparent;  /* Fix #34 */\n"
"}\n"
"\n"
"/*  ------------------------------------------------------------------------  */\n"
"/*  Items Selection */\n"
"\n"
"QTableView::item:selected,\n"
"QTreeView::item:selected,\n"
"QListView::item:selected {\n"
"  background-color: rgba(29, 233, 182, 0.2);\n"
"  selection-background-color: rgba(29, 233, 182, 0.2);\n"
"  color: #ffffff;\n"
"  selection-color: #ffffff; /* For Windows */\n"
"}\n"
"\n"
"QTableView::item:selected:focus,\n"
"QTreeView::item:selected:focus,\n"
"QListView::item:selected:focus {\n"
"  background-color: #1de9b6;\n"
"  selection-background-color: #1de9b6;\n"
"  color: #000000;\n"
"  selection-color: #000000; /* For Windows */\n"
"}\n"
"\n"
"QTableView {\n"
"  selection-background-color: rgba(29, 233, 182, 0.2);\n"
"}\n"
"\n"
"QTableView:focus {\n"
"  selection-background-color: #1de9b6;\n"
"}\n"
"\n"
"QTableView::item:disabled {\n"
"  color: rgba(255, 255, 255, 0.3);\n"
"  selection-color: rgba(255, 255, 255, 0.3);\n"
"  background-color: #232629;\n"
"  selection-background-color: #232629;\n"
"}\n"
"\n"
"/*  ------------------------------------------------------------------------  */\n"
"/*  QTreeView  */\n"
"\n"
"QTreeView::branch{\n"
"  background-color: #232629;\n"
"}\n"
"\n"
"QTreeView::branch:closed:has-children:has-siblings,\n"
"QTreeView::branch:closed:has-children:!has-siblings {\n"
"  image: url(./theme/primary/branch-closed.svg);\n"
"}\n"
"\n"
"QTreeView::branch:open:has-children:!has-siblings,\n"
"QTreeView::branch:open:has-children:has-siblings {\n"
"  image: url(./theme/primary/branch-open.svg);\n"
"}\n"
"\n"
"QTreeView::branch:has-siblings:!adjoins-item {\n"
"  border-image: url(./theme/disabled/vline.svg) 0;\n"
"}\n"
"\n"
"QTreeView::branch:has-siblings:adjoins-item {\n"
"    border-image: url(./theme/disabled/branch-more.svg) 0;\n"
"}\n"
"\n"
"QTreeView::branch:!has-children:!has-siblings:adjoins-item,\n"
"QTreeView::branch:has-children:!has-siblings:adjoins-item {\n"
"    border-image: url(./theme/disabled/branch-end.svg) 0;\n"
"}\n"
"\n"
"QTreeView QHeaderView::section {\n"
"  border: none;\n"
"}\n"
"\n"
"\n"
"/*  ------------------------------------------------------------------------  */\n"
"/*  Custom buttons  */\n"
"\n"
"QPushButton.danger {\n"
"  border-color: #dc3545;\n"
"  color: #dc3545;\n"
"}\n"
"\n"
"QPushButton.danger:checked,\n"
"QPushButton.danger:pressed {\n"
"  color: #31363b;\n"
"  background-color: #dc3545;\n"
"}\n"
"\n"
"QPushButton.warning{\n"
"  border-color: #ffc107;\n"
"  color: #ffc107;\n"
"}\n"
"\n"
"QPushButton.warning:checked,\n"
"QPushButton.warning:pressed {\n"
"  color: #31363b;\n"
"  background-color: #ffc107;\n"
"}\n"
"\n"
"QPushButton.success {\n"
"  border-color: #17a2b8;\n"
"  color: #17a2b8;\n"
"}\n"
"\n"
"QPushButton.success:checked,\n"
"QPushButton.success:pressed {\n"
"  color: #31363b;\n"
"  background-color: #17a2b8;\n"
"}\n"
"\n"
"QPushButton.danger:flat:hover {\n"
"  background-color: rgba(220, 53, 69, 0.2);\n"
"}\n"
"\n"
"QPushButton.danger:flat:pressed,\n"
"QPushButton.danger:flat:checked {\n"
"  background-color: rgba(220, 53, 69, 0.1);\n"
"  color: #dc3545;\n"
"}\n"
"\n"
"QPushButton.warning:flat:hover {\n"
"  background-color: rgba(255, 193, 7, 0.2);\n"
"}\n"
"\n"
"QPushButton.warning:flat:pressed,\n"
"QPushButton.warning:flat:checked {\n"
"  background-color: rgba(255, 193, 7, 0.1);\n"
"  color: #ffc107;\n"
"}\n"
"\n"
"QPushButton.success:flat:hover {\n"
"  background-color: rgba(23, 162, 184, 0.2);\n"
"}\n"
"\n"
"QPushButton.success:flat:pressed,\n"
"QPushButton.success:flat:checked {\n"
"  background-color: rgba(23, 162, 184, 0.1);\n"
"  color: #17a2b8;\n"
"}\n"
"\n"
"/*  ------------------------------------------------------------------------  */\n"
"/*  QTableView  */\n"
"\n"
"QTableCornerButton::section {\n"
"  background-color: #232629;\n"
"  border-radius: 0px;\n"
"  border-right: 1px solid;\n"
"  border-bottom: 1px solid;\n"
"  border-color: #31363b;\n"
"}\n"
"\n"
"QTableView {\n"
"  alternate-background-color: rgba(35, 38, 41, 0.7);\n"
"}\n"
"\n"
"QHeaderView {\n"
"  border: none;\n"
"}\n"
"\n"
"QHeaderView::section {\n"
"  color: rgba(255, 255, 255, 0.7);\n"
"  text-transform: uppercase;\n"
"  background-color: #232629;\n"
"  padding: 0 24px;\n"
"  height: 36px;\n"
"  border-radius: 0px;\n"
"  border-right: 1px solid;\n"
"  border-bottom: 1px solid;\n"
"  border-color: #31363b;\n"
"}\n"
"\n"
"QHeaderView::section:vertical {\n"
"\n"
"}\n"
"\n"
"QHeaderView::section:horizontal {\n"
"\n"
"}\n"
"\n"
"/*  ------------------------------------------------------------------------  */\n"
"/*  QLCDNumber  */\n"
"\n"
"QLCDNumber {\n"
"  color: #1de9b6;\n"
"  background-color:rgba(29, 233, 182, 0.1);\n"
"  border: 1px solid rgba(29, 233, 182, 0.3);\n"
"  border-radius: 4px;\n"
"}\n"
"\n"
"/*  ------------------------------------------------------------------------  */\n"
"/*  QCalendarWidget  */\n"
"\n"
"#qt_calendar_prevmonth {\n"
"  qproperty-icon: url(./theme/primary/leftarrow.svg);\n"
"}\n"
"\n"
"#qt_calendar_nextmonth {\n"
"  qproperty-icon: url(./theme/primary/rightarrow.svg);\n"
"}\n"
"\n"
"/*  ------------------------------------------------------------------------  */\n"
"/*  Inline QLineEdit  */\n"
"\n"
"QTreeView QLineEdit,\n"
"QTableView QLineEdit,\n"
"QListView QLineEdit {\n"
"  color: #ffffff;\n"
"  background-color: #232629;\n"
"  border: 1px solid unset;\n"
"  border-radius: unset;\n"
"  padding: unset;\n"
"  padding-left: unset;\n"
"  height: unset;\n"
"  border-width: unset;\n"
"  border-top-left-radius: unset;\n"
"  border-top-right-radius: unset;\n"
"}\n"
"\n"
"/*  ------------------------------------------------------------------------  */\n"
"/*  QToolTip  */\n"
"\n"
"QToolTip {\n"
"  padding: 4px;\n"
"  border: 1px solid #31363b;\n"
"  border-radius: 4px;\n"
"  color: #ffffff;\n"
"  background-color: #4f5b62;\n"
"}\n"
"\n"
"/*  ------------------------------------------------------------------------  */\n"
"/*  QDialog  */\n"
"\n"
"\n"
"\n"
"QDialog QToolButton:disabled {\n"
"  background-color: #232629;\n"
"  color: #ffffff\n"
"}\n"
"\n"
"/*  ------------------------------------------------------------------------  */\n"
"/*  Grips  */\n"
"\n"
"\n"
"QMainWindow::separator:vertical,\n"
"QSplitter::handle:horizontal {\n"
"  image: url(./theme/primary/splitter-horizontal.svg);\n"
"}\n"
"\n"
"QMainWindow::separator:horizontal,\n"
"QSplitter::handle:vertical {\n"
"  image: url(./theme/primary/splitter-vertical.svg);\n"
"}\n"
"\n"
"QSizeGrip {\n"
"  image: url(./theme/primary/sizegrip.svg);\n"
"  background-color: transparent;\n"
"}\n"
"\n"
"QMenuBar QToolButton:hover,\n"
"QMenuBar QToolButton:pressed,\n"
"QMenuBar QToolButton {\n"
"  border-width: 0;\n"
"  border-left: 10px;\n"
"  border-image: url(./theme/primary/rightarrow2.svg);\n"
"  background-color: transparent;\n"
"}\n"
"")

action = ""
addPackage = ""
def actioner(act):
    global action
    action = act
    window = MessageWindow
    ui = Ui_MessageWindow()
    ui.setupUi(window)
    window.show() 

class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.setFixedSize(627, 771)
        MainWindow.setWindowIcon(QtGui.QIcon('icon.ico'))
        MainWindow.setStyleSheet(rootStyleSheet)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.frame = QtWidgets.QFrame(self.centralwidget)
        self.frame.setGeometry(QtCore.QRect(0, 0, 631, 151))
        self.frame.setStyleSheet("background-color: rgb(20, 167, 130);\n"
"border-bottom-left-radius: 30px;\n"
"border-bottom-right-radius: 30px;")
        self.frame.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame.setObjectName("frame")
        self.label = QtWidgets.QLabel(self.frame)
        self.label.setGeometry(QtCore.QRect(180, 30, 291, 81))
        font = QtGui.QFont()
        font.setFamily("monoespace")
        font.setPointSize(40)
        font.setBold(True)
        font.setWeight(75)
        self.label.setFont(font)
        self.label.setObjectName("label")
        self.myTeleButton = QtWidgets.QPushButton(self.centralwidget)
        self.myTeleButton.setGeometry(QtCore.QRect(520, 690, 101, 31))
        self.myTeleButton.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.myTeleButton.setStyleSheet("QPushButton {\n"
"    border: 0px;\n"
"}\n"
"QPushButton:hover {\n"
"    color: rgb(24, 199, 152);\n"
"    background-color: rgb(49, 54, 59);\n"
"}\n"
"QPushButton:pressed {\n"
"    color: rgb(13, 109, 83);\n"
"    background-color: rgb(49, 54, 59);\n"
"}")
        self.myTeleButton.setObjectName("myTeleButton")
        self.packagesListWidget = QtWidgets.QListWidget(self.centralwidget)
        self.packagesListWidget.setGeometry(QtCore.QRect(30, 180, 571, 481))
        font = QtGui.QFont()
        font.setFamily("monoespace")
        font.setBold(True)
        font.setWeight(75)
        self.packagesListWidget.setFont(font)
        self.packagesListWidget.setSelectionMode(QtWidgets.QAbstractItemView.ExtendedSelection)
        self.packagesListWidget.setObjectName("packagesListWidget")
        self.removeButton = QtWidgets.QPushButton(self.centralwidget)
        self.removeButton.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.removeButton.setGeometry(QtCore.QRect(30, 680, 151, 51))
        self.removeButton.setObjectName("removeButton")
        self.installButton = QtWidgets.QPushButton(self.centralwidget)
        self.installButton.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.installButton.setGeometry(QtCore.QRect(190, 680, 151, 51))
        self.installButton.setObjectName("installButton")
        self.addButton = QtWidgets.QPushButton(self.centralwidget)
        self.addButton.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.addButton.setGeometry(QtCore.QRect(350, 680, 151, 51))
        self.addButton.setObjectName("addButton")
        MainWindow.setCentralWidget(self.centralwidget)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

        self.getData()

        self.selectedPackages = []

        self.packagesListWidget.itemSelectionChanged.connect(self.listSelected)
        self.installButton.clicked.connect(self.install)
        self.removeButton.clicked.connect(self.remove)
        self.addButton.clicked.connect(self.add)
        self.myTeleButton.clicked.connect(self.myTele)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "Wheeler | By j0x49"))
        self.label.setText(_translate("MainWindow", "Wheeler"))
        self.myTeleButton.setText(_translate("MainWindow", "By j0x49"))
        __sortingEnabled = self.packagesListWidget.isSortingEnabled()
        self.packagesListWidget.setSortingEnabled(False)
        self.packagesListWidget.setSortingEnabled(__sortingEnabled)
        self.removeButton.setText(_translate("MainWindow", "حذف"))
        self.installButton.setText(_translate("MainWindow", "نثبيت"))
        self.addButton.setText(_translate("MainWindow", "إضافه"))

    def getData(self):
        if not os.path.exists("./offlinePackages"):
            os.makedirs("offlinePackages", exist_ok=True)
        else:
            for offlinePackage in os.listdir("./offlinePackages"):
                self.packagesListWidget.addItem(offlinePackage)

    def listSelected(self):
        global selectedPackages
        selectedPackages = [item.text() for item in self.packagesListWidget.selectedItems()]


    def install(self):
        global message
        try:
            if len(selectedPackages) > 0:
                actioner("install")
            else:
                raise NameError

        except NameError:
            msg = QMessageBox()
            msg.setWindowTitle("خطأ")
            msg.setText("عليك إختيار مكتبه واحده على الأقل")
            msg.setIcon(QMessageBox.Critical)
            msg.setStandardButtons(QMessageBox.Ignore)
            msg.exec_()

    def remove(self):
        global message
        try:
            if selectedPackages:
                msg = QMessageBox()
                msg.setWindowTitle("إزاله")
                msg.setText("هل أنت متأكد من إزالة:\n{}".format('\n'.join(selectedPackages)))
                msg.setIcon(QMessageBox.Information)
                msg.setStandardButtons(QMessageBox.Ok|QMessageBox.Cancel)
                res = msg.exec_()

                if str(res) == "1024":
                    for selectedPackage in selectedPackages:
                        shutil.rmtree(f"offlinePackages/{selectedPackage}")
                    self.packagesListWidget.clear()
                    self.getData()
            else:
                raise NameError

        except NameError:
            msg = QMessageBox()
            msg.setWindowTitle("خطأ")
            msg.setText("عليك إختيار مكتبه واحده على الأقل")
            msg.setIcon(QMessageBox.Critical)
            msg.setStandardButtons(QMessageBox.Ignore)
            msg.exec_()

    def add(self):
        window = AddWindow
        ui = Ui_AddPackageWindow()
        ui.setupUi(window)
        window.show() 

    def myTele(self):
        os.system("start https://t.me/j0x49")


class Ui_AddPackageWindow(object):
    def setupUi(self, AddPackageWindow):
        AddPackageWindow.setObjectName("AddPackageWindow")
        AddPackageWindow.setFixedSize(627, 360)
        AddWindow.setWindowIcon(QtGui.QIcon('icon.ico'))
        AddPackageWindow.setStyleSheet(rootStyleSheet)
        self.centralwidget = QtWidgets.QWidget(AddPackageWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.frame = QtWidgets.QFrame(self.centralwidget)
        self.frame.setGeometry(QtCore.QRect(0, 0, 631, 151))
        self.frame.setStyleSheet("background-color: rgb(20, 167, 130);\n"
"border-bottom-left-radius: 30px;\n"
"border-bottom-right-radius: 30px;")
        self.frame.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame.setObjectName("frame")
        self.label = QtWidgets.QLabel(self.frame)
        self.label.setGeometry(QtCore.QRect(180, 30, 291, 81))
        font = QtGui.QFont()
        font.setFamily("monoespace")
        font.setPointSize(40)
        font.setBold(True)
        font.setWeight(75)
        self.label.setFont(font)
        self.label.setObjectName("label")
        self.myTeleButton = QtWidgets.QPushButton(self.centralwidget)
        self.myTeleButton.setGeometry(QtCore.QRect(490, 280, 101, 31))
        self.myTeleButton.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.myTeleButton.setStyleSheet("QPushButton {\n"
"    border: 0px;\n"
"}\n"
"QPushButton:hover {\n"
"    color: rgb(24, 199, 152);\n"
"    background-color: rgb(49, 54, 59);\n"
"}\n"
"QPushButton:pressed {\n"
"    color: rgb(13, 109, 83);\n"
"    background-color: rgb(49, 54, 59);\n"
"}")
        self.myTeleButton.setObjectName("myTeleButton")
        self.downloadButton = QtWidgets.QPushButton(self.centralwidget)
        self.downloadButton.setGeometry(QtCore.QRect(250, 270, 151, 51))
        self.downloadButton.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.downloadButton.setObjectName("downloadButton")
        self.packageLineEdit = QtWidgets.QLineEdit(self.centralwidget)
        self.packageLineEdit.setGeometry(QtCore.QRect(140, 190, 371, 41))
        font = QtGui.QFont()
        font.setFamily("monoespace")
        font.setBold(True)
        font.setWeight(75)
        self.packageLineEdit.setFont(font)
        self.packageLineEdit.setAlignment(QtCore.Qt.AlignCenter)
        self.packageLineEdit.setObjectName("packageLineEdit")
        AddPackageWindow.setCentralWidget(self.centralwidget)
        self.statusbar = QtWidgets.QStatusBar(AddPackageWindow)
        self.statusbar.setObjectName("statusbar")
        AddPackageWindow.setStatusBar(self.statusbar)

        def download():
            if len(self.packageLineEdit.text()) > 0:
                global addPackage
                addPackage = self.packageLineEdit.text()
                actioner("download")

        def myTele():
            os.system("start https://t.me/j0x49")

        self.downloadButton.clicked.connect(download)
        self.myTeleButton.clicked.connect(myTele)

        self.retranslateUi(AddPackageWindow)
        QtCore.QMetaObject.connectSlotsByName(AddPackageWindow)

    def retranslateUi(self, AddPackageWindow):
        _translate = QtCore.QCoreApplication.translate
        AddPackageWindow.setWindowTitle(_translate("AddPackageWindow", "wheeler | Add Lib"))
        self.label.setText(_translate("AddPackageWindow", "Wheeler"))
        self.myTeleButton.setText(_translate("AddPackageWindow", "By j0x49"))
        self.downloadButton.setText(_translate("AddPackageWindow", "تنزيل"))
    
    

class Ui_MessageWindow(object):
    def setupUi(self, MessageWindow):
        MessageWindow.setObjectName("MessageWindow")
        MessageWindow.setFixedSize(411, 346)
        MessageWindow.setWindowIcon(QtGui.QIcon('icon.ico'))
        MessageWindow.setStyleSheet(rootStyleSheet)
        self.centralwidget = QtWidgets.QWidget(MessageWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.logsLineEdit = QtWidgets.QLineEdit(self.centralwidget)
        self.logsLineEdit.setReadOnly(True)
        self.logsLineEdit.setAlignment(QtCore.Qt.AlignCenter)
        self.logsLineEdit.setStyleSheet("border: 2px solid #1ce3b1;")
        self.logsLineEdit.setGeometry(QtCore.QRect(10, 13, 391, 311))
        self.logsLineEdit.setObjectName("logsLineEdit")
        MessageWindow.setCentralWidget(self.centralwidget)
        self.statusbar = QtWidgets.QStatusBar(MessageWindow)
        self.statusbar.setObjectName("statusbar")
        MessageWindow.setStatusBar(self.statusbar)
        
        def starter():
            self.runAction()
        threading.Thread(target=starter).start()
        self.retranslateUi(MessageWindow)
        QtCore.QMetaObject.connectSlotsByName(MessageWindow)

    def retranslateUi(self, MessageWindow):
        _translate = QtCore.QCoreApplication.translate
        MessageWindow.setWindowTitle(_translate("MessageWindow", " "))


    def runAction(self):
        if action == "install":
            for selectedPackage in selectedPackages:
                self.logsLineEdit.setText(f"جالري تثبيت {selectedPackage} ...")
                for path in glob.glob(f"offlinePackages/{selectedPackage}/*.whl"):
                    # pip.main(['install', path])
                    os.system(f"pip install {path}")
                for path in glob.glob(f"offlinePackages/{selectedPackage}/*.gz"):
                    # pip.main(['install', path])
                    os.system(f"pip install {path}")
            self.logsLineEdit.setText("تم التثبيت")

        elif action == "download":
            if os.path.exists(f"offlinePackages/{addPackage}"):
                self.logsLineEdit.setText(f"{addPackage} موجوده بالفعل")
            else:
                self.logsLineEdit.setText(f"جاري تنزيل {addPackage} ...")
                # pip.main(["wheel", f"--wheel-dir=offlinePackages/{addPackage}", f"{addPackage}"])
                os.system(f"pip wheel --wheel-dir=offlinePackages/{addPackage} {addPackage}")
                self.logsLineEdit.setText("تم التنزيل - أعد تشغيل البرنامج")
                

if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MessageWindow = QtWidgets.QMainWindow()
    MainWindow = QtWidgets.QMainWindow()
    AddWindow = QtWidgets.QMainWindow()

    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
